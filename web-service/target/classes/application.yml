server:
  port: 8083
#  port: 8084

spring:
  application:
    name: web-service
  # 开启权重路由 ：Spring Cloud Loadbalancer nacos 实现
  cloud:
    loadbalancer:
      ribbon:
        enabled: false
      nacos:
        enabled: true
    # sentinel dashboard
    sentinel:
      transport:
        # 这里的 spring.cloud.sentinel.transport.port 端口配置会在应用对应的机器上启动一个 Http Server，该 Server 会与 Sentinel 控制台做交互。比如 Sentinel 控制台添加了1个限流规则，会把规则数据 push 给这个 Http Server 接收，Http Server 再将规则注册到 Sentinel 中。
        port: 8719
        dashboard: localhost:8080


  # spring Session store type.
  session:
    store-type: redis
  data:
    redis:
      host: localhost # Redis server host.
      port: 6379 # Redis server port.

# 开启节点探测服务选项
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always


